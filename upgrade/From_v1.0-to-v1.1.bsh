#!/bin/bash 
# -----------------------------------------
source /etc/MySB/inc/includes_before
# -----------------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___        
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_       
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_      
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__     
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_    
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_   
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_  
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__ 
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

echo
echo -e "${CRED}If you lose connection during installation, restart the SSH session and run the following command:$CEND"
echo -e "${CGREEN}	screen -r MySB_UpgradeMe$CEND"
echo

#### VARs
LISTUSERS=`ls /etc/MySB/users/ | grep '.info' | sed 's/.\{5\}$//'`

#### Questions
GetString NO "Install DNScrypt-proxy ? " INSTALLDNSCRYPT YES
if [ ! -z $IFPVEKERNEL ] && [ "$INSTALLDNSCRYPT" == "YES" ]; then
	echo -e "${CYELLOW}Your system is an$CEND ${CRED}OpenVZ container$CEND${CYELLOW}.$CEND"
	echo -e "${CYELLOW}At the end of the installation, you should replace your DNS (/etc/resolv.conf) with ${CGREEN}nameserver 127.0.0.1$CEND${CYELLOW} through the OpenVZ host (eg Proxmox).$CEND"
	echo -e "${CYELLOW}Otherwise you will lose your configuration on the next reboot.$CEND"
	sleep 10
fi

GetString NO "Install Logwatch ?" INSTALLLOGWATCH YES

echo
echo

#### Directories & Files
echo -e -n "${CBLUE}Create missing directories$CEND..."
screen -dmS CreateDir /bin/bash /etc/MySB/install/CreateDir;
WaitingScreen CreateDir
StatusSTD

#### Packages
echo -e -n "${CBLUE}Install missing packages$CEND..."
screen -dmS Packages /bin/bash /etc/MySB/install/Packages;
WaitingScreen Packages
StatusSTD

#### SSH
echo -e -n "${CBLUE}Some fixes for SSH$CEND..."
screen -dmS SSH /bin/bash /etc/MySB/install/SSH;
WaitingScreen SSH
StatusSTD

#### Tweaks
echo -e -n "${CBLUE}Sytem optimization$CEND..."
screen -dmS Tweaks /bin/bash /etc/MySB/install/Tweaks;
WaitingScreen Tweaks
StatusSTD

#### Download all files now in one time (GIT, SVN, TAR.GZ, WBM)
echo -e -n "${CBLUE}Download all files now in one time (GIT, SVN, TAR.GZ, WBM)$CEND..."
screen -dmS DownloadAll /bin/bash /etc/MySB/install/DownloadAll;
WaitingScreen DownloadAll
StatusSTD

# DNScrypt-proxy
if [ "$INSTALLDNSCRYPT" == "YES" ]; then
	echo "$INSTALLDNSCRYPT" > /etc/MySB/infos/install_dnscrypt.info
	
	echo -e -n "${CBLUE}Install and configure DNScrypt-proxy$CEND..."
	screen -dmS DNScrypt /bin/bash /etc/MySB/install/DNScrypt;
	WaitingScreen DNScrypt
	StatusSTD
fi

#### Logwatch
if [ "$INSTALLLOGWATCH" == "YES" ]; then
	echo "$INSTALLLOGWATCH" > /etc/MySB/infos/install_logwatch.info
	
	echo -e -n "${CBLUE}Install and configure Logwatch$CEND..."
	screen -dmS Logwatch /bin/bash /etc/MySB/install/Logwatch;
	WaitingScreen Logwatch
	StatusSTD
fi

#### Correcting SSL vulnerability (poodle) for Nginx and Postfix
echo -e -n "${CBLUE}Correcting SSL vulnerability (poodle) for Nginx and Postfix$CEND..."
perl -pi -e "s/ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;/ssl_protocols TLSv1 TLSv1.1 TLSv1.2;/g" /etc/nginx/nginx.conf
echo "smtpd_tls_mandatory_protocols = !SSLv2,!SSLv3" >> /etc/postfix/main.cf
echo "smtpd_tls_protocols = !SSLv2,!SSLv3" >> /etc/postfix/main.cf
echo "smtp_tls_protocols = !SSLv2,!SSLv3" >> /etc/postfix/main.cf
StatusSTD

#### LOGs
echo -e -n "${CBLUE}Managing log files$CEND..."
if [ "`ls -la /etc/MySB/web/logs/ | grep 'NginX-*'`" != "" ]; then
	mv /etc/MySB/web/logs/NginX-* /etc/MySB/web/logs/nginx/
fi
if [ "`ls -la /etc/MySB/web/logs/ | grep 'PeerGuardian-*'`" != "" ]; then
	mv /etc/MySB/web/logs/PeerGuardian-*.html /etc/MySB/web/logs/security/
fi
if [ "`ls -la /etc/MySB/web/logs/ | grep 'sh-log.html'`" != "" ]; then
	mv /etc/MySB/web/logs/install/*.sh-log.html /etc/MySB/web/logs/scripts/
fi
if [ "`ls -la /etc/MySB/web/logs/ | grep 'MySB_'`" != "" ]; then
	mv /etc/MySB/web/logs/MySB_* /etc/MySB/web/logs/bin/
fi
StatusSTD

#### Blocklist.sh
echo -e -n "${CBLUE}Crontab management$CEND..."
crontab -l > /tmp/crontab.tmp
sed -i '/BlockList.sh/d' /tmp/crontab.tmp
echo "0 23 * * * /bin/bash /etc/MySB/scripts/BlockList.sh NoBanner" >> /tmp/crontab.tmp
crontab /tmp/crontab.tmp
rm /tmp/crontab.tmp
StatusSTD

#### Postfix
echo -e -n "${CBLUE}Some fixes for Postfix$CEND..."
case "$SMTP" in
	"FREE")
		echo "smtp.free.fr" > /etc/MySB/infos/smtp_host.info
		echo "465" > /etc/MySB/infos/smtp_port.info
		echo "SSL" > /etc/MySB/infos/smtp_security.info			
	;;
	"YAHOO")
		echo "smtp.mail.yahoo.fr" > /etc/MySB/infos/smtp_host.info
		echo "465" > /etc/MySB/infos/smtp_port.info
		echo "SSL" > /etc/MySB/infos/smtp_security.info	
	;;		
	"OVH")
		echo "ssl0.ovh.net" > /etc/MySB/infos/smtp_host.info
		echo "465" > /etc/MySB/infos/smtp_port.info
		echo "SSL" > /etc/MySB/infos/smtp_security.info	
	;;
	"GMAIL")
		echo "smtp.gmail.com" > /etc/MySB/infos/smtp_host.info
		echo "465" > /etc/MySB/infos/smtp_port.info
		echo "SSL" > /etc/MySB/infos/smtp_security.info	
	;;
	"LOCAL")
		echo "localhost" > /etc/MySB/infos/smtp_host.info
		echo "25" > /etc/MySB/infos/smtp_port.info
		echo "NOSSL" > /etc/MySB/infos/smtp_security.info	
	;;		
esac
StatusSTD

#### Seedbox-Manager
echo -e -n "${CBLUE}Some fixes for Seedbox-Manager$CEND..."
for seedUser in $LISTUSERS; do
	sed -i '/OpenVPN/d' /usr/share/nginx/html/seedbox-manager/conf/users/$seedUser/config.ini
done
StatusSTD

#### PHP
echo -e -n "${CBLUE}Some fixes for PHP5$CEND..."
perl -pi -e "s/expose_php = On/expose_php = Off/g" /etc/php5/cli/php.ini
StatusSTD

#### rTorrent (.rtorrent.rc)
for seedUser in $LISTUSERS; do
	log_daemon_msg "Creating '.rtorrent.rc' file for $seedUser"
	HOMEDIR_ESCAPED=`echo /home/$seedUser | sed s,/,\\\\\\\\\\/,g`
	SCGIPORT=$(cat /etc/MySB/users/$seedUser.info | grep "SCGI port=" | awk '{ print $3 }')
	NETWORKPORT=$(cat /etc/MySB/users/$seedUser.info | grep "rTorrent port=" | awk '{ print $3 }')
	
	cp /home/$seedUser/.rtorrent.rc /home/$seedUser/.rtorrent.rc.bckp_v1.0_to_v1.1
	cp /etc/MySB/templates/rtorrent.rc.template /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<server_ip>/$IPADDRESS/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<username>/$seedUser/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<homedir>/$HOMEDIR_ESCAPED/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<scgi_port>/$SCGIPORT/g" /home/$seedUser/.rtorrent.rc
	perl -pi -e "s/<port_range>/$NETWORKPORT-$NETWORKPORT/g" /home/$seedUser/.rtorrent.rc
	
	if [ "$MYBLOCKLIST" == "rTorrent" ]; then
		perl -pi -e "s/#{1}ipv4_filter.load/ipv4_filter.load/g" /home/$seedUser/.rtorrent.rc
		perl -pi -e "s/#{1}print/print/g" /home/$seedUser/.rtorrent.rc
		perl -pi -e "s/#{1}schedule=load_filter/schedule=load_filter/g" /home/$seedUser/.rtorrent.rc
	fi

	case "$FILESYSTEMTYPE" in
		"ext4"|"xfs"|"btrfs")
			perl -pi -e "s/system.file_allocate.set = no/system.file_allocate.set = yes/g" /home/$seedUser/.rtorrent.rc
		;;	
		*)
			perl -pi -e "s/^system.file_allocate.set = yes/system.file_allocate.set = no/g" /home/$seedUser/.rtorrent.rc
		;;			
	esac
	
	StatusLSB
done

#### Firewall And Security
ScriptInvoke 'source' '/etc/MySB/scripts/FirewallAndSecurity.sh' 'new'

#### Refresh tools
ScriptInvoke 'bash' '/etc/MySB/bin/MySB_RefreshMe' 'all'

clear
echo -e "${CGREEN}Upgrade finished succesfully !$CEND"
echo

# -----------------------------------------
source /etc/MySB/inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################