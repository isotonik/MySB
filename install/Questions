#!/bin/bash 
# ----------------------------------
source /etc/MySB/inc/includes_before
# ----------------------------------
#  __/\\\\____________/\\\\___________________/\\\\\\\\\\\____/\\\\\\\\\\\\\___        
#   _\/\\\\\\________/\\\\\\_________________/\\\/////////\\\_\/\\\/////////\\\_       
#    _\/\\\//\\\____/\\\//\\\____/\\\__/\\\__\//\\\______\///__\/\\\_______\/\\\_      
#     _\/\\\\///\\\/\\\/_\/\\\___\//\\\/\\\____\////\\\_________\/\\\\\\\\\\\\\\__     
#      _\/\\\__\///\\\/___\/\\\____\//\\\\\________\////\\\______\/\\\/////////\\\_    
#       _\/\\\____\///_____\/\\\_____\//\\\____________\////\\\___\/\\\_______\/\\\_   
#        _\/\\\_____________\/\\\__/\\_/\\\______/\\\______\//\\\__\/\\\_______\/\\\_  
#         _\/\\\_____________\/\\\_\//\\\\/______\///\\\\\\\\\\\/___\/\\\\\\\\\\\\\/__ 
#          _\///______________\///___\////__________\///////////_____\/////////////_____
#			By toulousain79 ---> https://github.com/toulousain79/
#
######################################################################
#
#	Copyright (c) 2013 toulousain79 (https://github.com/toulousain79/)
#	Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
#	The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
#	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
#	IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#	--> Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
#
##################### FIRST LINE #####################################

#### Advertising
echo
echo -e "${CRED}############################################################$CEND"
echo -e "${CRED}#$CEND ${CYELLOW}At the end of the installation, you will receive an email.$CEND"
echo -e "${CRED}#$CEND ${CYELLOW}It lists information about your account.$CEND"
#echo -e "${CRED}#$CEND ${CYELLOW}A temporary password will be assigned to your account.$CEND"
#echo -e "${CRED}#$CEND ${CYELLOW}You will need to change it when receiving email.$CEND"
echo -e "${CRED}# IMPORTANT:$CEND ${CYELLOW}Remember to also check the SPAM folder...$CEND"
echo -e "${CRED}############################################################$CEND"
echo

echo
echo -e "${CGREEN}############################################################$CEND"
echo -e "${CGREEN}#$CEND	${CYELLOW}Now, I need some informations.$CEND"
echo -e "${CGREEN}############################################################$CEND"
echo

#### MAIN USER INFO
echo -e "${CYELLOW}#### Main User Info ####$CEND"

# Username
while [ "`echo $NEWUSER | grep '@'`" != "" ] || [ "$NEWUSER" == "" ]; do
	GetString NO "Username for the first user for your seedbox (main user): " NEWUSER
done

# User password
echo
if [ -z $PASSWORD ]; then
	GetString YES "Password for this user: " PASSWORD
fi

# User IP addresses
echo
while [ ! "$CHECK_MYIP" = "$MYIP" ] || [ -z "$MYIP" ]; do
	MYIP="`echo $SSH_CLIENT | awk '{ print $1 }'`"
	if [ "$MYIP" == "" ]; then
		MYIP="`who --ips | awk '{print $6}' | grep ^[0123456789]`"
		if [ "$MYIP" == "" ]; then
			MYIP="`who --ips | awk '{print $5}' | grep ^[0123456789]`"
		fi
	fi

	GetString NO "What are your personal IP public addresses (separate by comma)? (to add in whitelist): " MYIP $MYIP
	IFS=$','
	for ip in $MYIP; do 
		TEMP=`ValidateIP "$ip"`
		if [ ! -z $TEMP ]; then CHECK_MYIP="$CHECK_MYIP $TEMP"; fi
	done
	unset IFS
	CHECK_MYIP=`echo $CHECK_MYIP | sed -e "s/\ /\,/g;" | sed -e "s/^$//g;"`	
done

# SMTP ?
echo
echo -e "${CYELLOW}Do you want to use an external SMTP server? (Good for safe sending emails.).$CEND"
echo -e "${CYELLOW}Choose between ${CGREEN}LOCAL$CEND${CYELLOW} or listed providers $CEND${CGREEN}FREE$CEND|$CEND${CGREEN}OVH$CEND${CYELLOW}|$CEND${CGREEN}GMAIL$CEND|$CEND${CGREEN}YAHOO$CEND${CYELLOW}. Only SSL transactions will be used (SSL/465).$CEND"
GetString NO "What is your provider? " SMTP LOCAL

SMTP=`echo $SMTP | tr '[:lower:]' '[:upper:]'`
if [ "$SMTP" != "LOCAL" ]; then	
	GetString NO "What is the username for the SMTP server ${CGREEN}$SMTP$CEND?" SMTP_USER
	GetString YES "What is the password for the SMTP server ${CGREEN}$SMTP$CEND?" SMTP_PASS
fi

# User e-mail
echo
echo -e "${CYELLOW}Be careful when entering your e-mail address!$CEND"
echo -e "${CYELLOW}If the input address is wrong, you will not receive the confirmation email ...$CEND"
echo -e "${CYELLOW}If you selected a different provider that LOCAL to the previous question,$CEND"
echo -e "${CYELLOW}you must enter here email address corresponding to the SMTP account you specified.$CEND"
while [ ! "`ValidateMail $EMAILUSER`" = "0" ]; do
	GetString NO "What's your e-mail address ?" EMAILUSER
done

#### SERVER INFO
echo
echo -e "${CYELLOW}#### Server Info ####$CEND"

#Time Zone	
GetString NO "What is your time zone ? (ex: Europe/Paris): " TIMEZONE "Europe/Paris"

# Primary Inet
GetString NO "What is your primary network interface ? (ex: eth0, nic0, ...): " PRIMARYINET $PRIMARYINET

# Box' IP
while [ ! "$CHECK_IPADDRESS" = "$IPADDRESS" ] || [ -z "$IPADDRESS" ]; do
	GetString NO  "What is the IP address of your box: " IPADDRESS $IPADDRESS
	CHECK_IPADDRESS=`ValidateIP "$IPADDRESS"`
done

# Box' hostname
GetString NO "What is the hostname (FQDN) of your box: " HOSTFQDN $HOSTFQDN $HOSTFQDN

# NginX HTTP port
GetString NO "NginX HTTP port (usually 80): " NGINXHTTPPORT 8888

# NginX HTTPs port
GetString NO "NginX HTTPs port (usually 443): " NGINXHTTPSPORT 8889

# SSH port
GetString NO "SSH port (usually 22): " NEWSSHPORT 8892

# FTP port
GetString NO "FTP port (usually 21): " NEWFTPPORT 8891

# FTP Active data port
GetString NO "FTP Active Data port (usually 20): " NEWFTPDATAPORT 8800


#### SERVICES
echo
echo -e "${CYELLOW}#### Services ####$CEND"

# Seedbox-Manager
GetString NO "Install Seedbox-Manager (recommended)? " INSTALLMANAGER YES

# Cakebox Light
echo
GetString NO "Install CakeBox Light? " INSTALLCAKEBOX YES
if [ "$INSTALLCAKEBOX" == "YES" ]; then
	GetString NO "CakeBox port: " CAKEBOXPORT 8887
fi

# Plexmedia server
echo
GetString NO "Install Plex Media? " INSTALLPLEXMEDIA YES

# Webmin
echo
GetString NO "Install Webmin? " INSTALLWEBMIN YES
if [ "$INSTALLWEBMIN" == "YES" ]; then
	GetString NO "Webmin port  (usually 10000): " WEBMINPORT 8890
fi

# OpenVPN
echo
if [ "`ls -la /dev/net/tun &>2 /dev/null && echo $?`" == "0" ]; then
	GetString NO "Install OpenVPN? " INSTALLOPENVPN YES
	if [ "$INSTALLOPENVPN" == "YES" ]; then
		GetString NO  "OpenVPN port: " OPENVPNPORT 8893
		echo -e "${CYELLOW}You can use OpenVPN with TCP or UDP.$CEND"
		GetString NO "Which protocol, 'UDP' OR 'TCP' ? : " OPENVPNPROTO TCP
	fi
else
	echo -e "${CYELLOW}Your system is an$CEND ${CRED}OpenVZ container$CEND${CYELLOW}.$CEND"
	echo -e "${CYELLOW}You must follow this link BEFORE install 'MySB'.$CEND"
	echo -e "${CGREEN}https://openvpn.net/index.php/access-server/docs/admin-guides/186-how-to-run-access-server-on-a-vps-container.html$CEND"
	INSTALLOPENVPN=NO
	
	GetString NO  "Do you want to continue without OpenVPN, type 'yes' ?" CONTINUE NO
	if [ "$CONTINUE" == "NO" ]; then
		echo -e "${CYELLOW}OK, see you later...$CEND"
		echo
		echo
		EndingScript 0
	fi	
fi

#### SECURITY
echo
echo -e "${CYELLOW}#### Security ####$CEND"

# Logwatch
GetString NO "Install Logwatch ?" INSTALLLOGWATCH YES

# Fail2Ban
echo
GetString NO "Install Fail2ban? " INSTALLFAIL2BAN YES

# Blocklist
echo
echo -e "${CYELLOW}How should we manage blocklists?$CEND"
echo -e "${CYELLOW}With$CEND ${CGREEN}PeerGuardian$CEND${CYELLOW}, you completely protect your seedbox. You also use less RAM. $CEND"
echo -e "${CYELLOW}While with$CEND ${CGREEN}rTorrent$CEND${CYELLOW}, you will only protect your use of rTorrent. And memory consumption will be dependent on the number of seedbox users.$CEND"
echo -e "${CYELLOW}Choose '$CEND${CGREEN}none$CEND${CYELLOW}' if you don't want to use a blocklist. It's not recommended.$CEND"

if [ -z $IFPVEKERNEL ]; then
	if [ "$MEMORY" -lt "2048" ]; then
		echo -e "${CYELLOW}Your system have ${CRED}$MEMORY$CEND ${CYELLOW}MB of RAM. I recommend using PeerGuardian.$CEND"
	else
		echo -e "${CYELLOW}Your system have ${CRED}$MEMORY$CEND ${CYELLOW}MB of RAM. You can choose between PeerGuardian and rTorrent.$CEND"
	fi
	GetString NO "'PeerGuardian' OR 'rTorrent' OR 'none'?" MYBLOCKLIST "PeerGuardian"
else
	echo -e "${CYELLOW}Your system is an$CEND ${CRED}OpenVZ container$CEND${CYELLOW}.$CEND"
	echo -e "${CYELLOW}It's not possible to install$CEND ${CGREEN}PeerGuardian$CEND${CYELLOW}.$CEND"
	GetString NO "'rTorrent' OR 'none'?" MYBLOCKLIST "rTorrent"
fi

# DNScrypt-proxy
echo
GetString NO "Install DNScrypt-proxy? " INSTALLDNSCRYPT YES
if [ ! -z $IFPVEKERNEL ] && [ "$INSTALLDNSCRYPT" == "YES" ]; then
	echo -e "${CYELLOW}Your system is an$CEND ${CRED}OpenVZ container$CEND${CYELLOW}.$CEND"
	echo -e "${CYELLOW}At the end of the installation, you should replace your DNS (/etc/resolv.conf) with ${CGREEN}nameserver 127.0.0.1$CEND${CYELLOW} through the OpenVZ host (eg Proxmox).$CEND"
	echo -e "${CYELLOW}Otherwise you will lose your configuration on the next reboot.$CEND"
	sleep 10
fi
	
#### permanently adding scripts to PATH to all users and root
echo "PATH=$PATH:/etc/MySB/bin:/sbin" | tee -a /etc/profile &> /dev/null
echo "export PATH" | tee -a /etc/profile &> /dev/null
echo "PATH=$PATH:/etc/MySB/bin:/sbin" | tee -a /root/.bashrc &> /dev/null
echo "export PATH" | tee -a /root/.bashrc &> /dev/null

# -----
echo "$NEWUSER" > /etc/MySB/infos/newuser.info		# Will be delete after first install
echo "$PASSWORD" > /etc/MySB/infos/password.info	# Will be delete after first install
echo "$NEWUSER" > /etc/MySB/infos/mainuser.info
echo "$EMAILUSER" > /etc/MySB/infos/email.info
echo "$MYIP" > /etc/MySB/infos/myip.info			# Will be delete after first install
echo "$SMTP" > /etc/MySB/infos/smtp.info
echo "$SMTP_PASS" > /etc/MySB/infos/smtp_pass.info	# Will be delete after first install
echo "$SMTP_USER" > /etc/MySB/infos/smtp_user.info
# -----
echo "$TIMEZONE" > /etc/MySB/infos/timezone.info
echo "$PRIMARYINET" > /etc/MySB/infos/primaryinet.info
echo "$NEWUSER" > /etc/MySB/infos/newuser.info
echo "$IPADDRESS" > /etc/MySB/infos/ipaddress.info
echo "$HOSTFQDN" > /etc/MySB/infos/hostfqdn.info
echo "$MYBLOCKLIST" > /etc/MySB/infos/blocklist.info
echo "$NGINXHTTPPORT" > /etc/MySB/infos/port_http.info
echo "$NGINXHTTPSPORT" > /etc/MySB/infos/port_https.info
echo "$NEWSSHPORT" > /etc/MySB/infos/port_ssh.info
echo "$NEWFTPPORT" > /etc/MySB/infos/port_ftp.info
echo "$NEWFTPDATAPORT" > /etc/MySB/infos/port_ftpdata.info
if [ "$INSTALLCAKEBOX" == "YES" ]; then
	echo "$CAKEBOXPORT" > /etc/MySB/infos/port_cakebox.info
fi
if [ "$INSTALLWEBMIN" == "YES" ]; then
	echo "$WEBMINPORT" > /etc/MySB/infos/port_webmin.info
fi
if [ "$INSTALLOPENVPN" == "YES" ]; then
	echo "$OPENVPNPORT" > /etc/MySB/infos/port_openvpn.info
	echo "$OPENVPNPROTO" | awk '{print tolower($0)}' > /etc/MySB/infos/proto_openvpn.info
fi

echo "$INSTALLMANAGER" > /etc/MySB/infos/install_manager.info
echo "$INSTALLFAIL2BAN" > /etc/MySB/infos/install_fail2ban.info
echo "$INSTALLWEBMIN" > /etc/MySB/infos/install_webmin.info
echo "$INSTALLOPENVPN" > /etc/MySB/infos/install_openvpn.info
echo "$INSTALLPLEXMEDIA" > /etc/MySB/infos/install_plexmedia.info
echo "$INSTALLCAKEBOX" > /etc/MySB/infos/install_cakebox.info
echo "$INSTALLDNSCRYPT" > /etc/MySB/infos/install_dnscrypt.info
echo "$INSTALLLOGWATCH" > /etc/MySB/infos/install_logwatch.info
	
# -----------------------------------------
source /etc/MySB/inc/includes_after
# -----------------------------------------
##################### LAST LINE ######################################
